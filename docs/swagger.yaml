basePath: /api/v1
definitions:
  models.LoginCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for the Hub project.
  title: Hub API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user by username and password
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Invalid username or password
          schema:
            type: string
      summary: Login User
      tags:
      - Authentication
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a video file to MongoDB using GridFS
      parameters:
      - description: Video file to upload
        in: formData
        name: video
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Video uploaded successfully
          schema:
            type: string
        "400":
          description: Unable to read video file
          schema:
            type: string
        "500":
          description: Unable to upload video
          schema:
            type: string
      summary: Upload a video
      tags:
      - Videos
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create User
      tags:
      - Users
  /video/{id}:
    get:
      description: Streams a video file from MongoDB by its ID
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - video/mp4
      responses:
        "200":
          description: Video streamed successfully
          schema:
            type: file
        "404":
          description: Video not found
          schema:
            type: string
        "500":
          description: Failed to stream video
          schema:
            type: string
      summary: Stream a video
      tags:
      - Videos
  /video/first:
    get:
      description: Streams the first video file from MongoDB GridFS
      produces:
      - video/mp4
      responses:
        "200":
          description: Video streamed successfully
          schema:
            type: file
        "404":
          description: No video found
          schema:
            type: string
        "500":
          description: Failed to stream video
          schema:
            type: string
      summary: Stream the first video
      tags:
      - Videos
swagger: "2.0"
